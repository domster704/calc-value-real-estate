---
openapi: 3.0.0
info:
  title: FlaskTLC API
  description: This is a flaskTLC API
  version: 1.0.2
servers:
  - url: https://flasklct.herokuapp.com
    description: Backend server
tags:
  - name: Parser
    description: Parser for analogs
  - name: Authorization
    description: Auth by JWT Token
paths:
  /api/login:
    post:
      tags:
        - Authorization
      summary: authorization with WEB JWT Token
      requestBody:
        description: bodyRequest запрос
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/AuthorizationBody'
      responses:
        "200":
          description: JWT Token для запросов
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/inline_response_200'
  /api/getCianAnalogs:
    post:
      tags:
        - Parser
      summary: searches flat analogs on cian
      description: |
        Поиск аналогов на циане по обязательным параметрам
      operationId: searchInventory
      requestBody:
        description: bodyRequest запрос
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/RequestCianParserBody'
      responses:
        "200":
          description: Список аналогов с координатами корректирующих параметрам
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/inline_response_200_1'
components:
  schemas:
    AuthorizationBody:
      required:
        - password
        - username
      type: object
      properties:
        username:
          type: string
          example: Nikita
        password:
          type: string
          example: 12345asdfg
    RequestCianParserBody:
      required:
        - address
        - correctArea
        - correctBalcony
        - correctFloor
        - correctKitchenArea
        - correctMetroTime
        - correctStatusFinish
        - material
        - maxFloor
        - room
        - segment
      type: object
      properties:
        address:
          type: string
          example: Россия, Москва, Октябрьская улица, 35
        room:
          type: string
          description: Может принимать не только число, но и "студия"
          example: "2"
        segment:
          type: string
          description: Сегмент квартиры (новостройка, вторичка). Может принмать ["oldhousingstock", "modernhousing", "newbuilding"] и русские аналоги ["старый жилой фонд", "современное жильё", "новостройка"]
          example: старый жилой фонд
        maxFloor:
          type: integer
          example: 22
        material:
          type: string
          description: Материал дома. Может принимать ["brick", "monolith", "panel"] и русские аналоги ["кирпич", "монолит", "панель"]
          example: панель
        correctFloor:
          type: integer
          example: 4
        correctArea:
          type: integer
          example: 36
        correctKitchenArea:
          type: integer
          example: 9
        correctBalcony:
          type: string
          description: корректирующий показатель о наличии балкона принимается ибо "да", либо "нет" (регистр неважен)
          example: да
        correctMetroTime:
          type: integer
          example: 7
        correctStatusFinish:
          type: string
          description: корректирующее состояние отделки. Может быть ["nofinish", "econom", "improved"] или русские аналоги ["без отделки", "муниципальный ремонт", "современная отделка"]
          example: без отделки
    ResponseCianParserBody:
      required:
        - address
        - coordinates
        - correctArea
        - correctBalcony
        - correctFloor
        - correctKitchenArea
        - correctMetroTime
        - correctStatusFinish
        - material
        - maxFloor
        - room
        - segment
      type: object
      properties:
        address:
          type: string
          example: Россия, Москва, Октябрьская улица, 35
        location:
          $ref: '#/components/schemas/Location'
        room:
          type: string
          description: Может принимать не только число, но и "студия"
          example: "2"
        segment:
          type: string
          description: Сегмент квартиры (новостройка, вторичка). Может принмать ["oldhousingstock", "modernhousing", "newbuilding"] и русские аналоги ["старый жилой фонд", "современное жильё", "новостройка"]
          example: старый жилой фонд
        maxFloor:
          type: integer
          example: 22
        material:
          type: string
          description: Материал дома. Может принимать ["brick", "monolith", "panel"] и русские аналоги ["кирпич", "монолит", "панель"]
          example: панель
        correctFloor:
          type: integer
          example: 4
        correctArea:
          type: integer
          example: 36
        correctKitchenArea:
          type: integer
          example: 9
        correctBalcony:
          type: string
          description: корректирующий показатель о наличии балкона принимается ибо "да", либо "нет" (регистр неважен)
          example: да
        correctMetroTime:
          type: integer
          example: 7
        correctStatusFinish:
          type: string
          description: корректирующее состояние отделки. Может быть ["nofinish", "econom", "improved"] или русские аналоги ["без отделки", "муниципальный ремонт", "современная отделка"]
          example: без отделки
        photos:
          type: array
          description: список, состоящий из ссылок на фотографии квартиры
          maxLength: 3
    AnalogItem:
      required:
        - address
        - area
        - balcony
        - floor
        - kitchenArea
        - location
        - material
        - maxFloor
        - statusFinish
        - metroTime
        - price
        - roomsCount
        - typeOfArea
        - typeOfBalcony
        - typeOfFloor
        - typeOfKitchenArea
        - typeOfMetroTime
        - typeOfStatusFinish
        - photos
      type: object
      properties:
        address:
          type: string
          example: Россия, Москва, Октябрьская улица, 35
        price:
          type: integer
          example: 14800000
        roomsCount:
          type: string
          description: кол-во комнат
          example: "2"
        floor:
          type: integer
          description: этаж квартиры
          example: 6
        maxFloor:
          type: integer
          example: 9
        material:
          type: string
          example: панель
        area:
          type: string
          example: "45.5"
        kitchenArea:
          type: string
          description: Площадь кухни. Может быть null
          example: "6.0"
        balcony:
          type: string
          description: Есть ли балкон или нет
          example: да
        metroTime:
          type: integer
          description: Время в минутах до метро
          example: 5
        statusFinish:
          type: string
          description: состояние отделки у квартиры-аналога
          example: современная отделка
        typeOfFloor:
          type: array
          example:
            - 1
            - 2
          items:
            type: integer
        typeOfArea:
          type: array
          example:
            - 1
            - 2
          items:
            type: integer
        typeOfKitchenArea:
          type: array
          example:
            - 1
            - 2
          items:
            type: integer
        typeOfBalcony:
          type: array
          example:
            - 1
            - 2
          items:
            type: integer
        typeOfMetroTime:
          type: array
          example:
            - 1
            - 2
          items:
            type: integer
        typeOfStatusFinish:
          type: array
          example:
            - 1
            - 2
          items:
            type: integer
        location:
          $ref: '#/components/schemas/Location'
        photos:
          type: array
          description: список, состоящий из ссылок на фотографии квартиры
          maxLength: 3
          example: [ "https://cdn-p.cian.site/images/88/844/931/kvartira-moskva-prospekt-mira-1394488860-1.jpg",
                     "https://cdn-p.cian.site/images/88/844/931/kvartira-moskva-prospekt-mira-1394488849-1.jpg",
                     "https://cdn-p.cian.site/images/88/844/931/kvartira-moskva-prospekt-mira-1394488853-1.jpg" ]
    Location:
      required:
        - lat
        - lng
      type: object
      properties:
        lat:
          type: string
          example: "55.789684"
        lng:
          type: string
          example: "37.612640999999996"
    inline_response_200:
      type: object
      properties:
        message:
          type: string
          example: Success
        token:
          type: string
          example: JWT Token here
    inline_response_200_1:
      type: object
      properties:
        standard:
          $ref: '#/components/schemas/ResponseCianParserBody'
        analogs:
          type: array
          items:
            $ref: '#/components/schemas/AnalogItem'
